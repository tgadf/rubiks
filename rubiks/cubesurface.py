""" Cube surface container class """__all__ = ["CubeSurface"]import numpy as npfrom .axis import Axisclass CubeSurface:    def __repr__(self):        return f"CubeSurface(unit={self.unit_vector})"            def __init__(self, axis, polarity):        assert axis in ["x", "y", "z"], f"invalid axis [{axis}]"        assert polarity in ['-', '+'], f"invalid polarity [{polarity}]"        ax = Axis()        unit_vector = getattr(ax, f"{axis.lower()}_hat")        polarity = eval(f"{polarity}1")        self.axis = axis        self.unit_vector = polarity * unit_vector    def __eq__(self, cube_surface) -> 'bool':        return np.array_equal(self.unit_vector, cube_surface.unit_vector)    def __hash__(self):        return hash(tuple(self.unit_vector))