""" Rubik's Cube Color Container Class """__all__ = ["RubiksColors"]from itertools import cycleclass RubiksColors:    def __init__(self):        colors = ['tab:blue', 'tab:orange', 'tab:green', 'tab:red', 'tab:purple', 'tab:cyan']        self.color_sid = dict(zip(colors, ["B", "O", "G", "R", "P", "C"]))        self.color_pos = dict(zip(colors, range(colors)))        self.pos_color = {v: k for k, v in self.color_pos.items()}            def get_color_cycle(self, n):        assert isinstance(n, int) and n < len(self.colors_sid), f"Invalid n [{n}]"        retval = cycle(list(self.color_sid.keys()[:n]))        return retval            def get_color_pos(self, color):        pos = self.color_pos.get(color)        assert isinstance(pos, int), f"invalid color [{color}]"        return pos        def get_color_by_pos(self, pos):        color = self.pos_color.get(pos)        assert isinstance(color, str), f"invalid pos [{pos}]"        return color        def get_color_sid(self, color):        sid = self.color_sid.get(color)        assert isinstance(sid, str), f"invalid color [{color}]"        return sid